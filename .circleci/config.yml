version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  build-frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Install Dependecies & Build
          command: |
            cd capstone-rc-frontend      
            yarn install --immutable
            yarn build    
      - save_cache:
          name: Save Node Modules
          paths: [capstone-rc-frontend/node_modules]
          key: frontend-build-{{ .Environment.CIRCLE_SHA1 }}
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged          
  test-frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-build-{{ .Environment.CIRCLE_SHA1 }}
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Run Tests
          command: |
            cd capstone-rc-frontend            
            CI=true yarn test             

  build-push-docker:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          keys:
            - frontend-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint Docker File      
          command: |
            cd capstone-rc-frontend
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x ./hadolint 
            ./hadolint Dockerfile.prod
      - run:
          name: Build Docker image
          command: |
            cd capstone-rc-frontend
            docker build -f Dockerfile.prod -t $DOCKER_USERNAME/capstone-app:$CIRCLE_WORKFLOW_ID .
      - run:
          name: Push Docker Image
          command: | 
            echo $DOCKER_PWD | docker login -u $DOCKER_USERNAME docker.io --password-stdin
            docker push $DOCKER_USERNAME/capstone-app:$CIRCLE_WORKFLOW_ID  
  deploy:
    docker:
      - image: amazon/aws-cli 
    steps:
      - checkout
      - kubernetes/install-kubectl
      - run:
          name: Setup kubeconfig
          command: aws eks update-kubeconfig --region eu-central-1 --name capstone-cluster2
      - run:
         name: Start deployment
         command: |
          sed -i 's/VERSION/$CIRCLE_WORKFLOW_ID/g' deployment.yaml 
          kubectl apply -f deployment.yaml 
workflows:
  default-workflow:
    jobs:
      - build-frontend
      - test-frontend:
          requires: [build-frontend]
      - build-push-docker:
         requires: [test-frontend]
      - deploy:
         requires: [build-push-docker]